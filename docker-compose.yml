services:
  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:18.0.0
    command: start-dev
    environment:
      KC_DB: postgres
      KC_DB_URL_HOST: postgres_keycloak
      KC_DB_URL_DATABASE: keycloak
      KC_DB_PASSWORD: password
      KC_DB_USERNAME: keycloak
      KC_DB_SCHEMA: public
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8890:8080"
    depends_on:
      postgres_keycloak:
        condition: service_healthy
    networks:
      - keycloak_network
  postgres_keycloak:
    container_name: postgres_keycloak
    image: postgres:14.2
    command: postgres -c 'max_connections=200'
    volumes:
      - pgdata_keycloak:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    healthcheck:
      test: "exit 0"
    ports:
      - "5436:5432"
    networks:
      - keycloak_network
  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: amigoscode
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - spring
  influxdb:
    image: influxdb
    container_name: influxdb_monitoring
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=adminadmin
      - DOCKER_INFLUXDB_INIT_ORG=bmw-app
      - DOCKER_INFLUXDB_INIT_BUCKET=bmw-app
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=Q0w1gIo-fsHECIfUe_hRe-jzGUYoU8qzi5FiGuc1Oc2QobnKLnU81_19MjDTKv7aM10TFQfDWyLTJhfXFq8Qeg==
      - INFLUXDB_ADMIN_ENABLED=true
      - INFLUXDB_ADMIN_USER=${INFLUXDB_ADMIN_USER:-admin}
      - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_ADMIN_PASSWORD:-admin}
      - INFLUXDB_DB=bmw_app_influxdb
      - INFLUXDB_USER=${INFLUXDB_USER:-influxdb}
      - INFLUXDB_USER_PASSWORD=${INFLUXDB_USER_PASSWORD:-influxpass}
    volumes:
      - influxdb-storage:/var/lib/influxdb
      - influxdb_config-storage:/etc/influxdb/influxdb.conf
    ports:
      - "8090:8086"
    networks:
      - influxdb
  grafana:
    image: grafana/grafana
    container_name: grafana_monitoring
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - 9000:3000
    networks:
      - grafana
    volumes:
      - grafana-storage:/var/lib/grafana
      - grafana_config-storage:/etc/grafana
  prometheus:
    image: prom/prometheus
    container_name: prometheus_monitoring
    ports:
      - "9090:9090"
    volumes:
      - prometheus-storage:/etc/prometheus
      - $PWD/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - prometheus
networks:
  keycloak_network:
    driver: bridge
  postgres:
    driver: bridge
  spring:
    driver: bridge
  influxdb:
    driver: bridge
  grafana:
    driver: bridge
  prometheus:
    driver: bridge
volumes:
  pgdata_keycloak:
  postgres:
  pgadmin:
  influxdb-storage:
  influxdb_config-storage:
  grafana-storage:
  grafana_config-storage:
  prometheus-storage: